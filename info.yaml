---
# TinyTapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID
  source_files:        # If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. Source files must be in ./src
    - knight_rider_KolosKoblasz.v
    - light_shift.v
    - brightness_ctrl.v
    - rate_ctrl.v
  top_module:  "knight_rider_KolosKoblasz"      # put the name of your top module here, make it unique by prepending your github username

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it.
#
# Here is an example: https://github.com/mattvenn/tinytapeout_m_segments/blob/main/info.yaml
#
# This info will be automatically collected and used to make a datasheet for the chip.
documentation:
  author:       "Kolos Koblasz"      # Your name
  discord:      "kolos_koblasz#3383"      # Your discord handle
  title:        "Knight Rider Sensor Lights - LED Controller"      # Project title
  description:  "The logic assertes output bits one by one, like KITT's sensor lights in Knight Rider."      # Short description of what your project does
  how_it_works: "Uses several counters, shiftregisters to create a moving light. Input[2] and Input[3] can control speed and brightness respectively."      # Longer description of how the project works
  how_to_test:  "After reset it starts moving the switched on LED. By creating rising edges on Input[2] and Input[3] the two config spaces can be discovered. Input[0] is clk Input[1] is reset (1=reset on, 0=Reset off). Simulated with 6KHz clock signal."      # Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  external_hw:  "Conect LEDs with ~1K-10K Ohm serial resistors to output pins and connect push button switches to Input[2] and Input[3] which drive the inputs with logic zeros when idle and with logic 1 when pressed. Rising edge on these inputs selects the next settings."      # Describe any external hardware needed
  language:     "verilog" # other examples include Verilog, Amaranth, VHDL, etc
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     6000       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository
  inputs:               # a description of what the inputs do
    - clock
    - reset
    - speed control
    - brightness control
    - none
    - none
    - none
    - none
  outputs:
    - LED_0 # Output for LED 0
    - LED_1 # Output for LED 1
    - LED_2 # Output for LED 2
    - LED_3 # Output for LED 3
    - LED_4 # Output for LED 4
    - LED_5 # Output for LED 5
    - LED_6 # Output for LED 6
    - LED_7 # Output for LED 7

